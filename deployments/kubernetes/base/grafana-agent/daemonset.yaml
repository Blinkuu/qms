apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-agent-logs
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-agent-logs
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
      - events
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-agent-logs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-agent-logs
subjects:
  - kind: ServiceAccount
    name: grafana-agent-logs
    namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent-logs
  namespace: default
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: grafana-agent-logs
  template:
    metadata:
      labels:
        name: grafana-agent-logs
    spec:
      containers:
        - args:
            - -config.expand-env
            - -config.file=/etc/agent/agent.yaml
            - -server.http.address=0.0.0.0:80
          command:
            - /bin/agent
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LOGS_REMOTE_WRITE_URL
              valueFrom:
                secretKeyRef:
                  name: grafana-agent-logs
                  key: logs_remote_write_url
            - name: LOGS_REMOTE_WRITE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: grafana-agent-logs
                  key: logs_remote_write_username
            - name: LOGS_REMOTE_WRITE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-agent-logs
                  key: logs_remote_write_password
          image: grafana/agent:v0.24.2
          imagePullPolicy: IfNotPresent
          name: grafana-agent-logs
          ports:
            - containerPort: 80
              name: http-metrics
          securityContext:
            privileged: true
            runAsUser: 0
          volumeMounts:
            - name: grafana-agent-logs
              mountPath: /etc/agent
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      serviceAccountName: grafana-agent-logs
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - configMap:
            name: grafana-agent-logs
          name: grafana-agent-logs
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers

  updateStrategy:
    type: RollingUpdate
